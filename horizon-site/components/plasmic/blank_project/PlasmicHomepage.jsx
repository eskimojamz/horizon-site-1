// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: akQUwPYY2eStENCEGYmmQw
// Component: 255ZHLsJKg6A
import * as React from "react";
import Link from "next/link";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: r83GzkdYS5/component
import RecentListingsBlock from "../../RecentListingsBlock"; // plasmic-import: j7fyymFTtU/component
import RecentListing from "../../RecentListing"; // plasmic-import: w1_vCJeiHk/component
import TextInput from "../../TextInput"; // plasmic-import: STXems54UcG/component
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: akQUwPYY2eStENCEGYmmQw/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 255ZHLsJKg6A/css
import CallIcon from "./icons/PlasmicIcon__Call"; // plasmic-import: kxgRTdr1ZWq/icon

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

function PlasmicHomepage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"home2Desktop"}
            data-plasmic-override={overrides.home2Desktop}
            className={classNames(projectcss.all, sty.home2Desktop)}
          >
            <div
              data-plasmic-name={"heroContainer"}
              data-plasmic-override={overrides.heroContainer}
              className={classNames(projectcss.all, sty.heroContainer)}
            >
              <div
                data-plasmic-name={"navbar"}
                data-plasmic-override={overrides.navbar}
                className={classNames(projectcss.all, sty.navbar)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"logoContainer"}
                  data-plasmic-override={overrides.logoContainer}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.logoContainer)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qa5Ct)}
                    displayHeight={"36px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"36px"}
                    loading={"lazy"}
                    src={"/plasmic/blank_project/images/logo.svg"}
                  />

                  <div
                    data-plasmic-name={"textLogo"}
                    data-plasmic-override={overrides.textLogo}
                    className={classNames(projectcss.all, sty.textLogo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tdWxh
                      )}
                    >
                      {"Horizon Development"}
                    </div>
                  </div>
                </p.Stack>

                <div
                  data-plasmic-name={"navLinksContainer"}
                  data-plasmic-override={overrides.navLinksContainer}
                  className={classNames(projectcss.all, sty.navLinksContainer)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"navLinks"}
                    data-plasmic-override={overrides.navLinks}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.navLinks)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__te3Tm)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__ksCvb
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"Communities"}
                      </p.PlasmicLink>
                    </div>

                    <div
                      data-plasmic-name={"link2"}
                      data-plasmic-override={overrides.link2}
                      className={classNames(projectcss.all, sty.link2)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link___05Dk
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"Agents"}
                      </p.PlasmicLink>
                    </div>

                    <div
                      data-plasmic-name={"link3"}
                      data-plasmic-override={overrides.link3}
                      className={classNames(projectcss.all, sty.link3)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__kzdKx
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"About Us"}
                      </p.PlasmicLink>
                    </div>

                    <div
                      data-plasmic-name={"link4"}
                      data-plasmic-override={overrides.link4}
                      className={classNames(projectcss.all, sty.link4)}
                    >
                      <p.PlasmicLink
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          sty.link__s8K6P
                        )}
                        component={Link}
                        platform={"nextjs"}
                      >
                        {"Contact"}
                      </p.PlasmicLink>
                    </div>
                  </p.Stack>
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"phoneLink"}
                  data-plasmic-override={overrides.phoneLink}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.phoneLink)}
                >
                  <CallIcon
                    data-plasmic-name={"svg"}
                    data-plasmic-override={overrides.svg}
                    className={classNames(projectcss.all, sty.svg)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ifOk
                    )}
                  >
                    {"718-3322-3232"}
                  </div>
                </p.Stack>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"heroText"}
                data-plasmic-override={overrides.heroText}
                hasGap={true}
                className={classNames(projectcss.all, sty.heroText)}
              >
                <div
                  data-plasmic-name={"heroTextPrimary"}
                  data-plasmic-override={overrides.heroTextPrimary}
                  className={classNames(projectcss.all, sty.heroTextPrimary)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q8Ja4
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {"Let’s find your \ndream home\nin "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FBA703" }}
                      >
                        {"New York"}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div
                  data-plasmic-name={"heroTextSm"}
                  data-plasmic-override={overrides.heroTextSm}
                  className={classNames(projectcss.all, sty.heroTextSm)}
                >
                  <div
                    data-plasmic-name={
                      "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou"
                    }
                    data-plasmic-override={
                      overrides.horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou
                    )}
                  >
                    {
                      "Horizon Development helps \nNew Yorkers find a home they love. \nWe guarantee we’ll find \nsomething perfect for you. "
                    }
                  </div>
                </div>

                <div
                  data-plasmic-name={"heroBtn"}
                  data-plasmic-override={overrides.heroBtn}
                  className={classNames(projectcss.all, sty.heroBtn)}
                >
                  <Button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                    color={["primary"]}
                    size={"large"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eMm8X
                      )}
                    >
                      {"Learn More"}
                    </div>
                  </Button>
                </div>
              </p.Stack>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"recentListings"}
              data-plasmic-override={overrides.recentListings}
              hasGap={true}
              className={classNames(projectcss.all, sty.recentListings)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"recentListingsContainer"}
                  data-plasmic-override={overrides.recentListingsContainer}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.recentListingsContainer
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"recentListingsHeader"}
                    data-plasmic-override={overrides.recentListingsHeader}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.recentListingsHeader
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qaCCe
                      )}
                    >
                      {"Recently Listed"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__egQqJ
                      )}
                    >
                      {"Browse through the latest real estate listings"}
                    </div>
                  </p.Stack>

                  <RecentListingsBlock
                    data-plasmic-name={"recentListingsBlock"}
                    data-plasmic-override={overrides.recentListingsBlock}
                    className={classNames(
                      "__wab_instance",
                      sty.recentListingsBlock
                    )}
                  >
                    <RecentListing
                      address={"56-27 Cloverdale Blvd, Bayside"}
                      className={classNames(
                        "__wab_instance",
                        sty.recentListing__dOnMv
                      )}
                      price={"$ 1,300,000"}
                      imageSrc='https://images.unsplash.com/photo-1583608205776-bfd35f0d9f83?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80'
                    />

                    <RecentListing
                      address={"56-27 Cloverdale Blvd, Bayside"}
                      className={classNames(
                        "__wab_instance",
                        sty.recentListing__dbEKh
                      )}
                      price={"$ 1,300,000"}
                    />

                    <RecentListing
                      address={"56-27 Cloverdale Blvd, Bayside"}
                      className={classNames(
                        "__wab_instance",
                        sty.recentListing___8ItQc
                      )}
                      price={"$ 1,300,000"}
                    />
                  </RecentListingsBlock>
                </p.Stack>
              ) : null}
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"heroInfoWrapper"}
              data-plasmic-override={overrides.heroInfoWrapper}
              hasGap={true}
              className={classNames(projectcss.all, sty.heroInfoWrapper)}
            >
              <div
                data-plasmic-name={"heroInfoRow"}
                data-plasmic-override={overrides.heroInfoRow}
                className={classNames(projectcss.all, sty.heroInfoRow)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"heroInfoMain"}
                    data-plasmic-override={overrides.heroInfoMain}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.heroInfoMain)}
                  >
                    <div
                      data-plasmic-name={"heroInfoTitle"}
                      data-plasmic-override={overrides.heroInfoTitle}
                      className={classNames(projectcss.all, sty.heroInfoTitle)}
                    >
                      <div
                        data-plasmic-name={"heroInfoTitleText"}
                        data-plasmic-override={overrides.heroInfoTitleText}
                        className={classNames(
                          projectcss.all,
                          sty.heroInfoTitleText
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bXamo
                          )}
                        >
                          {"Top Quality Service Is On The Horizon"}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__o6Xri
                          )}
                        >
                          {"We’re ready to assist you"}
                        </div>
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"heroInfoBody"}
                      data-plasmic-override={overrides.heroInfoBody}
                      className={classNames(projectcss.all, sty.heroInfoBody)}
                    >
                      <div
                        data-plasmic-name={"heroInfoBodyImg"}
                        data-plasmic-override={overrides.heroInfoBodyImg}
                        className={classNames(
                          projectcss.all,
                          sty.heroInfoBodyImg
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__mzWk)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={
                            "https://images.unsplash.com/photo-1551524164-687a55dd1126?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1025&q=80"
                          }
                        />
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"heroInfoBodySide"}
                          data-plasmic-override={overrides.heroInfoBodySide}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.heroInfoBodySide
                          )}
                        >
                          <div
                            data-plasmic-name={"heroInfoBodyText"}
                            data-plasmic-override={overrides.heroInfoBodyText}
                            className={classNames(
                              projectcss.all,
                              sty.heroInfoBodyText
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cyWt5
                              )}
                            >
                              {
                                "The home-buying process can be complicated. Our licensed professionals will make it simple and give you everything you need."
                              }
                            </div>
                          </div>

                          <Button
                            data-plasmic-name={"heroInfoBodyButton"}
                            data-plasmic-override={overrides.heroInfoBodyButton}
                            className={classNames(
                              "__wab_instance",
                              sty.heroInfoBodyButton
                            )}
                            color={["navyDark"]}
                          >
                            {"Buyer's Guide"}
                          </Button>
                        </p.Stack>
                      ) : null}
                    </div>
                  </p.Stack>
                ) : null}

                <p.Stack
                  as={"aside"}
                  data-plasmic-name={"heroInfoAside"}
                  data-plasmic-override={overrides.heroInfoAside}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.heroInfoAside)}
                >
                  <div
                    data-plasmic-name={"heroInfoAsideHeader"}
                    data-plasmic-override={overrides.heroInfoAsideHeader}
                    className={classNames(
                      projectcss.all,
                      sty.heroInfoAsideHeader
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wfvZl
                      )}
                    >
                      {"Stay in touch with the \nlatest properties"}
                    </div>
                  </div>

                  <form
                    data-plasmic-name={"heroInfoAsideForm"}
                    data-plasmic-override={overrides.heroInfoAsideForm}
                    className={classNames(
                      projectcss.all,
                      sty.heroInfoAsideForm
                    )}
                  >
                    {true ? (
                      <div
                        data-plasmic-name={"heroInfoAsideFormContainer"}
                        data-plasmic-override={
                          overrides.heroInfoAsideFormContainer
                        }
                        className={classNames(
                          projectcss.all,
                          sty.heroInfoAsideFormContainer
                        )}
                      >
                        <TextInput
                          data-plasmic-name={"emailInput"}
                          data-plasmic-override={overrides.emailInput}
                          className={classNames(
                            "__wab_instance",
                            sty.emailInput
                          )}
                          defaultValue={""}
                        />

                        <Button
                          data-plasmic-name={"emailButton"}
                          data-plasmic-override={overrides.emailButton}
                          className={classNames(
                            "__wab_instance",
                            sty.emailButton
                          )}
                          color={["navyDark"]}
                        >
                          {"Submit"}
                        </Button>
                      </div>
                    ) : null}
                  </form>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"heroInfoAsideBottom"}
                    data-plasmic-override={overrides.heroInfoAsideBottom}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.heroInfoAsideBottom
                    )}
                  >
                    {true ? (
                      <div
                        data-plasmic-name={"heroInfoAsideMap"}
                        data-plasmic-override={overrides.heroInfoAsideMap}
                        className={classNames(
                          projectcss.all,
                          sty.heroInfoAsideMap
                        )}
                      />
                    ) : null}
                    {true ? (
                      <div
                        data-plasmic-name={"heroInfoAsideMapinfo"}
                        data-plasmic-override={overrides.heroInfoAsideMapinfo}
                        className={classNames(
                          projectcss.all,
                          sty.heroInfoAsideMapinfo
                        )}
                      >
                        {true ? (
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"heroInfoAsideMaptext"}
                            data-plasmic-override={
                              overrides.heroInfoAsideMaptext
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.heroInfoAsideMaptext
                            )}
                          >
                            <div
                              data-plasmic-name={"heroInfoAsideMaptext1"}
                              data-plasmic-override={
                                overrides.heroInfoAsideMaptext1
                              }
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heroInfoAsideMaptext1
                              )}
                            >
                              {"Horizon Development Realty"}
                            </div>

                            <div
                              data-plasmic-name={"heroInfoAsideMaptext12"}
                              data-plasmic-override={
                                overrides.heroInfoAsideMaptext12
                              }
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heroInfoAsideMaptext12
                              )}
                            >
                              {"218-14 Northern Blvd \nBayside, NY 11364"}
                            </div>

                            <div
                              data-plasmic-name={"heroInfoAsideMaptext13"}
                              data-plasmic-override={
                                overrides.heroInfoAsideMaptext13
                              }
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heroInfoAsideMaptext13
                              )}
                            >
                              {"(917)-454-8392"}
                            </div>
                          </p.Stack>
                        ) : null}
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
            </p.Stack>

            <div
              data-plasmic-name={"testimonials"}
              data-plasmic-override={overrides.testimonials}
              className={classNames(projectcss.all, sty.testimonials)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"testimonialsContainer"}
                  data-plasmic-override={overrides.testimonialsContainer}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.testimonialsContainer
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"testimonialsHeader"}
                    data-plasmic-override={overrides.testimonialsHeader}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.testimonialsHeader
                    )}
                  >
                    <div
                      data-plasmic-name={"testimonialsTitle"}
                      data-plasmic-override={overrides.testimonialsTitle}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.testimonialsTitle
                      )}
                    >
                      {"Testimonials"}
                    </div>

                    <div
                      data-plasmic-name={"testimonialsText"}
                      data-plasmic-override={overrides.testimonialsText}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.testimonialsText
                      )}
                    >
                      {"See what our clients have to say about us"}
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"testimonialsBlock"}
                    data-plasmic-override={overrides.testimonialsBlock}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.testimonialsBlock
                    )}
                  >
                    <div
                      data-plasmic-name={"testimonial3"}
                      data-plasmic-override={overrides.testimonial3}
                      className={classNames(projectcss.all, sty.testimonial3)}
                    >
                      <div
                        data-plasmic-name={"quotation3"}
                        data-plasmic-override={overrides.quotation3}
                        className={classNames(projectcss.all, sty.quotation3)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wi3Gs
                          )}
                        >
                          {"”"}
                        </div>
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"testimonialBottom"}
                          data-plasmic-override={overrides.testimonialBottom}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.testimonialBottom
                          )}
                        >
                          <div
                            data-plasmic-name={"quote3"}
                            data-plasmic-override={overrides.quote3}
                            className={classNames(projectcss.all, sty.quote3)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xtYch
                              )}
                            >
                              {
                                "The folks at Horizon Development\nhelped me every step of the way in buying my first home. They negotiated on my behalf to lower the final buying price and I couldn’t be happier. I’d highly recommend their services to anyone looking to buy a home in New York."
                              }
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"profile3"}
                            data-plasmic-override={overrides.profile3}
                            className={classNames(projectcss.all, sty.profile3)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"profileInfo3"}
                              data-plasmic-override={overrides.profileInfo3}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.profileInfo3
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sB7
                                )}
                              >
                                {"Alan Durant"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__stfaB
                                )}
                              >
                                {"Home Buyer from Syosset"}
                              </div>
                            </p.Stack>

                            <div
                              data-plasmic-name={"profileImg3"}
                              data-plasmic-override={overrides.profileImg3}
                              className={classNames(
                                projectcss.all,
                                sty.profileImg3
                              )}
                            >
                              <div
                                data-plasmic-name={"b1Hs2QbYbAs2"}
                                data-plasmic-override={overrides.b1Hs2QbYbAs2}
                                className={classNames(
                                  projectcss.all,
                                  sty.b1Hs2QbYbAs2
                                )}
                              />
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      data-plasmic-name={"testimonial4"}
                      data-plasmic-override={overrides.testimonial4}
                      className={classNames(projectcss.all, sty.testimonial4)}
                    >
                      <div
                        data-plasmic-name={"quotation4"}
                        data-plasmic-override={overrides.quotation4}
                        className={classNames(projectcss.all, sty.quotation4)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__snN5L
                          )}
                        >
                          {"”"}
                        </div>
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"testimonialBottom2"}
                          data-plasmic-override={overrides.testimonialBottom2}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.testimonialBottom2
                          )}
                        >
                          <div
                            data-plasmic-name={"quote4"}
                            data-plasmic-override={overrides.quote4}
                            className={classNames(projectcss.all, sty.quote4)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0R67J
                              )}
                            >
                              {
                                "I want to thank agent Chouhan and his team for the excellent services they provided for me and my family through the entire process of selling my home. They are professionals in real estate with the highest quality in Queens!"
                              }
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"profile4"}
                            data-plasmic-override={overrides.profile4}
                            className={classNames(projectcss.all, sty.profile4)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"profileInfo4"}
                              data-plasmic-override={overrides.profileInfo4}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.profileInfo4
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__k0JTg
                                )}
                              >
                                {"Alan Durant"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___75AlV
                                )}
                              >
                                {"Home Buyer from Syosset"}
                              </div>
                            </p.Stack>

                            <div
                              data-plasmic-name={"profileImg4"}
                              data-plasmic-override={overrides.profileImg4}
                              className={classNames(
                                projectcss.all,
                                sty.profileImg4
                              )}
                            >
                              <div
                                data-plasmic-name={"b1Hs2QbYbAs3"}
                                data-plasmic-override={overrides.b1Hs2QbYbAs3}
                                className={classNames(
                                  projectcss.all,
                                  sty.b1Hs2QbYbAs3
                                )}
                              />
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>

                    <div
                      data-plasmic-name={"testimonial5"}
                      data-plasmic-override={overrides.testimonial5}
                      className={classNames(projectcss.all, sty.testimonial5)}
                    >
                      <div
                        data-plasmic-name={"quotation5"}
                        data-plasmic-override={overrides.quotation5}
                        className={classNames(projectcss.all, sty.quotation5)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___57CiM
                          )}
                        >
                          {"”"}
                        </div>
                      </div>

                      {true ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"testimonialBottom3"}
                          data-plasmic-override={overrides.testimonialBottom3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.testimonialBottom3
                          )}
                        >
                          <div
                            data-plasmic-name={"quote5"}
                            data-plasmic-override={overrides.quote5}
                            className={classNames(projectcss.all, sty.quote5)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__sFSu6
                              )}
                            >
                              {
                                "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris dictum et ligula non facilisis. Maecenas ultricies facilisis turpis vitae fringilla. Suspendisse pharetra facilisis turpis eget tincidunt. Cras laoreet nunc et nisi auctor condimentum."
                              }
                            </div>
                          </div>

                          <div
                            data-plasmic-name={"profile5"}
                            data-plasmic-override={overrides.profile5}
                            className={classNames(projectcss.all, sty.profile5)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"profileInfo5"}
                              data-plasmic-override={overrides.profileInfo5}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.profileInfo5
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__gatgF
                                )}
                              >
                                {"Alan Durant"}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___6LOj7
                                )}
                              >
                                {"Home Buyer from Syosset"}
                              </div>
                            </p.Stack>

                            <div
                              data-plasmic-name={"profileImg5"}
                              data-plasmic-override={overrides.profileImg5}
                              className={classNames(
                                projectcss.all,
                                sty.profileImg5
                              )}
                            >
                              <div
                                data-plasmic-name={"b1Hs2QbYbAs4"}
                                data-plasmic-override={overrides.b1Hs2QbYbAs4}
                                className={classNames(
                                  projectcss.all,
                                  sty.b1Hs2QbYbAs4
                                )}
                              />
                            </div>
                          </div>
                        </p.Stack>
                      ) : null}
                    </div>
                  </p.Stack>
                </p.Stack>
              ) : null}
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "home2Desktop",
    "heroContainer",
    "navbar",
    "logoContainer",
    "textLogo",
    "navLinksContainer",
    "navLinks",
    "link2",
    "link3",
    "link4",
    "phoneLink",
    "svg",
    "heroText",
    "heroTextPrimary",
    "heroTextSm",
    "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou",
    "heroBtn",
    "button",
    "recentListings",
    "recentListingsContainer",
    "recentListingsHeader",
    "recentListingsBlock",
    "heroInfoWrapper",
    "heroInfoRow",
    "heroInfoMain",
    "heroInfoTitle",
    "heroInfoTitleText",
    "heroInfoBody",
    "heroInfoBodyImg",
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton",
    "heroInfoAside",
    "heroInfoAsideHeader",
    "heroInfoAsideForm",
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton",
    "heroInfoAsideBottom",
    "heroInfoAsideMap",
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13",
    "testimonials",
    "testimonialsContainer",
    "testimonialsHeader",
    "testimonialsTitle",
    "testimonialsText",
    "testimonialsBlock",
    "testimonial3",
    "quotation3",
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2",
    "testimonial4",
    "quotation4",
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3",
    "testimonial5",
    "quotation5",
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  home2Desktop: [
    "home2Desktop",
    "heroContainer",
    "navbar",
    "logoContainer",
    "textLogo",
    "navLinksContainer",
    "navLinks",
    "link2",
    "link3",
    "link4",
    "phoneLink",
    "svg",
    "heroText",
    "heroTextPrimary",
    "heroTextSm",
    "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou",
    "heroBtn",
    "button",
    "recentListings",
    "recentListingsContainer",
    "recentListingsHeader",
    "recentListingsBlock",
    "heroInfoWrapper",
    "heroInfoRow",
    "heroInfoMain",
    "heroInfoTitle",
    "heroInfoTitleText",
    "heroInfoBody",
    "heroInfoBodyImg",
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton",
    "heroInfoAside",
    "heroInfoAsideHeader",
    "heroInfoAsideForm",
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton",
    "heroInfoAsideBottom",
    "heroInfoAsideMap",
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13",
    "testimonials",
    "testimonialsContainer",
    "testimonialsHeader",
    "testimonialsTitle",
    "testimonialsText",
    "testimonialsBlock",
    "testimonial3",
    "quotation3",
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2",
    "testimonial4",
    "quotation4",
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3",
    "testimonial5",
    "quotation5",
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  heroContainer: [
    "heroContainer",
    "navbar",
    "logoContainer",
    "textLogo",
    "navLinksContainer",
    "navLinks",
    "link2",
    "link3",
    "link4",
    "phoneLink",
    "svg",
    "heroText",
    "heroTextPrimary",
    "heroTextSm",
    "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou",
    "heroBtn",
    "button"
  ],

  navbar: [
    "navbar",
    "logoContainer",
    "textLogo",
    "navLinksContainer",
    "navLinks",
    "link2",
    "link3",
    "link4",
    "phoneLink",
    "svg"
  ],

  logoContainer: ["logoContainer", "textLogo"],
  textLogo: ["textLogo"],
  navLinksContainer: [
    "navLinksContainer",
    "navLinks",
    "link2",
    "link3",
    "link4"
  ],

  navLinks: ["navLinks", "link2", "link3", "link4"],
  link2: ["link2"],
  link3: ["link3"],
  link4: ["link4"],
  phoneLink: ["phoneLink", "svg"],
  svg: ["svg"],
  heroText: [
    "heroText",
    "heroTextPrimary",
    "heroTextSm",
    "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou",
    "heroBtn",
    "button"
  ],

  heroTextPrimary: ["heroTextPrimary"],
  heroTextSm: [
    "heroTextSm",
    "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou"
  ],

  horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou:
    [
      "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou"
    ],

  heroBtn: ["heroBtn", "button"],
  button: ["button"],
  recentListings: [
    "recentListings",
    "recentListingsContainer",
    "recentListingsHeader",
    "recentListingsBlock"
  ],

  recentListingsContainer: [
    "recentListingsContainer",
    "recentListingsHeader",
    "recentListingsBlock"
  ],

  recentListingsHeader: ["recentListingsHeader"],
  recentListingsBlock: ["recentListingsBlock"],
  heroInfoWrapper: [
    "heroInfoWrapper",
    "heroInfoRow",
    "heroInfoMain",
    "heroInfoTitle",
    "heroInfoTitleText",
    "heroInfoBody",
    "heroInfoBodyImg",
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton",
    "heroInfoAside",
    "heroInfoAsideHeader",
    "heroInfoAsideForm",
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton",
    "heroInfoAsideBottom",
    "heroInfoAsideMap",
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13"
  ],

  heroInfoRow: [
    "heroInfoRow",
    "heroInfoMain",
    "heroInfoTitle",
    "heroInfoTitleText",
    "heroInfoBody",
    "heroInfoBodyImg",
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton",
    "heroInfoAside",
    "heroInfoAsideHeader",
    "heroInfoAsideForm",
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton",
    "heroInfoAsideBottom",
    "heroInfoAsideMap",
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13"
  ],

  heroInfoMain: [
    "heroInfoMain",
    "heroInfoTitle",
    "heroInfoTitleText",
    "heroInfoBody",
    "heroInfoBodyImg",
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton"
  ],

  heroInfoTitle: ["heroInfoTitle", "heroInfoTitleText"],
  heroInfoTitleText: ["heroInfoTitleText"],
  heroInfoBody: [
    "heroInfoBody",
    "heroInfoBodyImg",
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton"
  ],

  heroInfoBodyImg: ["heroInfoBodyImg"],
  heroInfoBodySide: [
    "heroInfoBodySide",
    "heroInfoBodyText",
    "heroInfoBodyButton"
  ],

  heroInfoBodyText: ["heroInfoBodyText"],
  heroInfoBodyButton: ["heroInfoBodyButton"],
  heroInfoAside: [
    "heroInfoAside",
    "heroInfoAsideHeader",
    "heroInfoAsideForm",
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton",
    "heroInfoAsideBottom",
    "heroInfoAsideMap",
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13"
  ],

  heroInfoAsideHeader: ["heroInfoAsideHeader"],
  heroInfoAsideForm: [
    "heroInfoAsideForm",
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton"
  ],

  heroInfoAsideFormContainer: [
    "heroInfoAsideFormContainer",
    "emailInput",
    "emailButton"
  ],

  emailInput: ["emailInput"],
  emailButton: ["emailButton"],
  heroInfoAsideBottom: [
    "heroInfoAsideBottom",
    "heroInfoAsideMap",
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13"
  ],

  heroInfoAsideMap: ["heroInfoAsideMap"],
  heroInfoAsideMapinfo: [
    "heroInfoAsideMapinfo",
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13"
  ],

  heroInfoAsideMaptext: [
    "heroInfoAsideMaptext",
    "heroInfoAsideMaptext1",
    "heroInfoAsideMaptext12",
    "heroInfoAsideMaptext13"
  ],

  heroInfoAsideMaptext1: ["heroInfoAsideMaptext1"],
  heroInfoAsideMaptext12: ["heroInfoAsideMaptext12"],
  heroInfoAsideMaptext13: ["heroInfoAsideMaptext13"],
  testimonials: [
    "testimonials",
    "testimonialsContainer",
    "testimonialsHeader",
    "testimonialsTitle",
    "testimonialsText",
    "testimonialsBlock",
    "testimonial3",
    "quotation3",
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2",
    "testimonial4",
    "quotation4",
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3",
    "testimonial5",
    "quotation5",
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  testimonialsContainer: [
    "testimonialsContainer",
    "testimonialsHeader",
    "testimonialsTitle",
    "testimonialsText",
    "testimonialsBlock",
    "testimonial3",
    "quotation3",
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2",
    "testimonial4",
    "quotation4",
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3",
    "testimonial5",
    "quotation5",
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  testimonialsHeader: [
    "testimonialsHeader",
    "testimonialsTitle",
    "testimonialsText"
  ],

  testimonialsTitle: ["testimonialsTitle"],
  testimonialsText: ["testimonialsText"],
  testimonialsBlock: [
    "testimonialsBlock",
    "testimonial3",
    "quotation3",
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2",
    "testimonial4",
    "quotation4",
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3",
    "testimonial5",
    "quotation5",
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  testimonial3: [
    "testimonial3",
    "quotation3",
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2"
  ],

  quotation3: ["quotation3"],
  testimonialBottom: [
    "testimonialBottom",
    "quote3",
    "profile3",
    "profileInfo3",
    "profileImg3",
    "b1Hs2QbYbAs2"
  ],

  quote3: ["quote3"],
  profile3: ["profile3", "profileInfo3", "profileImg3", "b1Hs2QbYbAs2"],
  profileInfo3: ["profileInfo3"],
  profileImg3: ["profileImg3", "b1Hs2QbYbAs2"],
  b1Hs2QbYbAs2: ["b1Hs2QbYbAs2"],
  testimonial4: [
    "testimonial4",
    "quotation4",
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3"
  ],

  quotation4: ["quotation4"],
  testimonialBottom2: [
    "testimonialBottom2",
    "quote4",
    "profile4",
    "profileInfo4",
    "profileImg4",
    "b1Hs2QbYbAs3"
  ],

  quote4: ["quote4"],
  profile4: ["profile4", "profileInfo4", "profileImg4", "b1Hs2QbYbAs3"],
  profileInfo4: ["profileInfo4"],
  profileImg4: ["profileImg4", "b1Hs2QbYbAs3"],
  b1Hs2QbYbAs3: ["b1Hs2QbYbAs3"],
  testimonial5: [
    "testimonial5",
    "quotation5",
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  quotation5: ["quotation5"],
  testimonialBottom3: [
    "testimonialBottom3",
    "quote5",
    "profile5",
    "profileInfo5",
    "profileImg5",
    "b1Hs2QbYbAs4"
  ],

  quote5: ["quote5"],
  profile5: ["profile5", "profileInfo5", "profileImg5", "b1Hs2QbYbAs4"],
  profileInfo5: ["profileInfo5"],
  profileImg5: ["profileImg5", "b1Hs2QbYbAs4"],
  b1Hs2QbYbAs4: ["b1Hs2QbYbAs4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    home2Desktop: makeNodeComponent("home2Desktop"),
    heroContainer: makeNodeComponent("heroContainer"),
    navbar: makeNodeComponent("navbar"),
    logoContainer: makeNodeComponent("logoContainer"),
    textLogo: makeNodeComponent("textLogo"),
    navLinksContainer: makeNodeComponent("navLinksContainer"),
    navLinks: makeNodeComponent("navLinks"),
    link2: makeNodeComponent("link2"),
    link3: makeNodeComponent("link3"),
    link4: makeNodeComponent("link4"),
    phoneLink: makeNodeComponent("phoneLink"),
    svg: makeNodeComponent("svg"),
    heroText: makeNodeComponent("heroText"),
    heroTextPrimary: makeNodeComponent("heroTextPrimary"),
    heroTextSm: makeNodeComponent("heroTextSm"),
    horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou:
      makeNodeComponent(
        "horizonDevelopmentHasHelpedNewYorkersFindAHomeTheyLoveWeGuaranteeThatWellFindSomethingGreatForYou"
      ),

    heroBtn: makeNodeComponent("heroBtn"),
    button: makeNodeComponent("button"),
    recentListings: makeNodeComponent("recentListings"),
    recentListingsContainer: makeNodeComponent("recentListingsContainer"),
    recentListingsHeader: makeNodeComponent("recentListingsHeader"),
    recentListingsBlock: makeNodeComponent("recentListingsBlock"),
    heroInfoWrapper: makeNodeComponent("heroInfoWrapper"),
    heroInfoRow: makeNodeComponent("heroInfoRow"),
    heroInfoMain: makeNodeComponent("heroInfoMain"),
    heroInfoTitle: makeNodeComponent("heroInfoTitle"),
    heroInfoTitleText: makeNodeComponent("heroInfoTitleText"),
    heroInfoBody: makeNodeComponent("heroInfoBody"),
    heroInfoBodyImg: makeNodeComponent("heroInfoBodyImg"),
    heroInfoBodySide: makeNodeComponent("heroInfoBodySide"),
    heroInfoBodyText: makeNodeComponent("heroInfoBodyText"),
    heroInfoBodyButton: makeNodeComponent("heroInfoBodyButton"),
    heroInfoAside: makeNodeComponent("heroInfoAside"),
    heroInfoAsideHeader: makeNodeComponent("heroInfoAsideHeader"),
    heroInfoAsideForm: makeNodeComponent("heroInfoAsideForm"),
    heroInfoAsideFormContainer: makeNodeComponent("heroInfoAsideFormContainer"),
    emailInput: makeNodeComponent("emailInput"),
    emailButton: makeNodeComponent("emailButton"),
    heroInfoAsideBottom: makeNodeComponent("heroInfoAsideBottom"),
    heroInfoAsideMap: makeNodeComponent("heroInfoAsideMap"),
    heroInfoAsideMapinfo: makeNodeComponent("heroInfoAsideMapinfo"),
    heroInfoAsideMaptext: makeNodeComponent("heroInfoAsideMaptext"),
    heroInfoAsideMaptext1: makeNodeComponent("heroInfoAsideMaptext1"),
    heroInfoAsideMaptext12: makeNodeComponent("heroInfoAsideMaptext12"),
    heroInfoAsideMaptext13: makeNodeComponent("heroInfoAsideMaptext13"),
    testimonials: makeNodeComponent("testimonials"),
    testimonialsContainer: makeNodeComponent("testimonialsContainer"),
    testimonialsHeader: makeNodeComponent("testimonialsHeader"),
    testimonialsTitle: makeNodeComponent("testimonialsTitle"),
    testimonialsText: makeNodeComponent("testimonialsText"),
    testimonialsBlock: makeNodeComponent("testimonialsBlock"),
    testimonial3: makeNodeComponent("testimonial3"),
    quotation3: makeNodeComponent("quotation3"),
    testimonialBottom: makeNodeComponent("testimonialBottom"),
    quote3: makeNodeComponent("quote3"),
    profile3: makeNodeComponent("profile3"),
    profileInfo3: makeNodeComponent("profileInfo3"),
    profileImg3: makeNodeComponent("profileImg3"),
    b1Hs2QbYbAs2: makeNodeComponent("b1Hs2QbYbAs2"),
    testimonial4: makeNodeComponent("testimonial4"),
    quotation4: makeNodeComponent("quotation4"),
    testimonialBottom2: makeNodeComponent("testimonialBottom2"),
    quote4: makeNodeComponent("quote4"),
    profile4: makeNodeComponent("profile4"),
    profileInfo4: makeNodeComponent("profileInfo4"),
    profileImg4: makeNodeComponent("profileImg4"),
    b1Hs2QbYbAs3: makeNodeComponent("b1Hs2QbYbAs3"),
    testimonial5: makeNodeComponent("testimonial5"),
    quotation5: makeNodeComponent("quotation5"),
    testimonialBottom3: makeNodeComponent("testimonialBottom3"),
    quote5: makeNodeComponent("quote5"),
    profile5: makeNodeComponent("profile5"),
    profileInfo5: makeNodeComponent("profileInfo5"),
    profileImg5: makeNodeComponent("profileImg5"),
    b1Hs2QbYbAs4: makeNodeComponent("b1Hs2QbYbAs4"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
